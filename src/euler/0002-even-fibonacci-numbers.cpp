#include <doctest/doctest.h>

#include <vector>

using namespace std;

bool is_even(int n) { return n % 2 == 0; }

// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed
// four million, find the sum of the even-valued terms.
int sum_even()
{
	int constexpr lim = 4000000;
	vector<int> scratch { 1, 2 };
	int f1 = scratch[0];
	int f2 = scratch[1];
	int accumulator = f2;
	while (true) {
		int f0 = scratch.back();
		f1 = f0 + *(scratch.end() - 2);
		f2 = f1 + f0;
		if (f1 > lim) {
			break;
		} else {
			scratch.push_back(f1);
			scratch.push_back(f2);
			if (is_even(f1)) {
				accumulator += f1;
			}
			if (is_even(f2)) {
				accumulator += f2;
			}
		}
	}
	return accumulator;
}

TEST_CASE("Fibonacci sum")
{
	int n = sum_even();
	REQUIRE_MESSAGE(n == 4613732, "The Fibonacci even sum is: ", n, ".");
}